import React, { useEffect, useRef } from 'react';

declare global {
  interface Window {
    Typed: any;
  }
}

const HomePage: React.FC = () => {
  const typedElementRef = useRef<HTMLSpanElement>(null);
  const typedInstance = useRef<any>(null);

  useEffect(() => {
    // ุชุทุจูู ููุงุณ ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
    document.body.classList.add('body-home');

    // ุฅุนุฏุงุฏ Typed.js (ุจุนุฏ ุชุญููู ุงูููุชุจุฉ)
    const initTyped = () => {
      if (window.Typed && typedElementRef.current) {
        typedInstance.current = new window.Typed(typedElementRef.current, {
          strings: [
            'ุงุจุญุซ ุนู ุฃููุงู ูููุฒุฉ...',
            'ุงุจุญุซ ุนู ูุณูุณูุงุช ุฑุงุฆุนุฉ...',
            'ุงุจุญุซ ุนู ุจุฑุงูุฌ ูุดููุฉ...',
            'ุงุจุญุซ ุนู ุฃูุนุงุจ ููุชุนุฉ...',
            'ุงุจุญุซ ุนู ูุญุชูู ูุชููุน...'
          ],
          typeSpeed: 50,
          backSpeed: 30,
          backDelay: 2000,
          loop: true,
          showCursor: true,
          cursorChar: '|'
        });
      }
    };

    // ุชุฃุฎูุฑ ูุถูุงู ุชุญููู ุงูููุชุจุงุช
    setTimeout(initTyped, 500);

    return () => {
      document.body.classList.remove('body-home');
      if (typedInstance.current) {
        typedInstance.current.destroy();
      }
    };
  }, []);

  const handleSearchSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    const form = e.target as HTMLFormElement;
    const input = form.querySelector('input') as HTMLInputElement;
    const query = input.value.trim();
    
    if (query) {
      window.location.href = `/search?q=${encodeURIComponent(query)}`;
    }
  };

  return (
    <div className="hero-section">
      <div className="hero-content">
        <h1 className="hero-title">
          ูุฑุญุจุงู ุจู ูู ุงููุงู
        </h1>
        <p className="hero-subtitle">
          ุดูุณ ุงูููุงูุนุ ุงููููุน ุงูุนุฑุจู ุงูุฃูู ูุชุญููู ููุดุงูุฏุฉ ุงูุฃููุงู ูุงููุณูุณูุงุช
        </p>

        <div className="hero-search">
          <div className="search-container">
            <form className="search-form" onSubmit={handleSearchSubmit}>
              <div className="search-input-wrapper">
                <input
                  type="text"
                  className="search-input"
                  placeholder=""
                  autoComplete="off"
                />
                <button type="submit" className="search-btn">
                  <i className="icon-search"></i>
                </button>
              </div>
            </form>
            <div className="typed-text">
              <span ref={typedElementRef}></span>
            </div>
          </div>
        </div>
      </div>

      {/* ุงูุฃูุณุงู ุงูุณุฑูุนุฉ */}
      <div className="quick-sections">
        <a href="/movies" className="quick-section">
          <div className="icon">
            ๐ฌ
          </div>
          <div className="text">ุฃููุงู</div>
        </a>
        <a href="/series" className="quick-section">
          <div className="icon">
            ๐บ
          </div>
          <div className="text">ูุณูุณูุงุช</div>
        </a>
        <a href="/shows" className="quick-section">
          <div className="icon">
            ๐ป
          </div>
          <div className="text">ุชููุฒููู</div>
        </a>
        <a href="/mix" className="quick-section">
          <div className="icon">
            ๐ญ
          </div>
          <div className="text">ูููุนุงุช</div>
        </a>
      </div>

      {/* ุชุฃุซูุฑุงุช ุงูุฌุณููุงุช */}
      <div className="particles">
        {Array.from({ length: 50 }, (_, i) => (
          <div
            key={i}
            className="particle"
            style={{
              left: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 10}s`,
              animationDuration: `${6 + Math.random() * 4}s`
            }}
          ></div>
        ))}
      </div>
    </div>
  );
};

export default HomePage;