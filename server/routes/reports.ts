import express from 'express';
import { z } from 'zod';
import { validateRequest } from '../middleware/validation';

const router = express.Router();

// Schema ููุชุญูู ูู ุตุญุฉ ุชูุฑูุฑ ุงูุฎุทุฃ
const reportSchema = z.object({
  contentId: z.number(),
  contentTitle: z.string(),
  email: z.string().email().optional(),
  reason: z.string().min(1, 'ูุฌุจ ุงุฎุชูุงุฑ ุณุจุจ ุงูุชุจููุบ'),
  description: z.string().min(10, 'ูุฌุจ ูุชุงุจุฉ ูุตู ุงููุดููุฉ ุจุชูุตูู ุฃูุซุฑ'),
  pageUrl: z.string().url(),
  timestamp: z.string()
});

// ุฅูุดุงุก ุชูุฑูุฑ ุฌุฏูุฏ
router.post('/', validateRequest(reportSchema), async (req, res) => {
  try {
    const { contentId, contentTitle, email, reason, description, pageUrl, timestamp } = req.body;

    // ูุนูููุงุช ุฅุถุงููุฉ ููุชูุฑูุฑ
    const report = {
      id: Date.now(), // ูุนุฑู ูุคูุช
      contentId,
      contentTitle,
      email: email || 'ุบูุฑ ูุญุฏุฏ',
      reason,
      description,
      pageUrl,
      timestamp,
      userAgent: req.headers['user-agent'] || '',
      ip: req.ip || req.connection.remoteAddress || '',
      status: 'ุฌุฏูุฏ',
      createdAt: new Date().toISOString()
    };

    // ูู ุงูุฅูุชุงุฌุ ูุชู ุญูุธ ุงูุชูุฑูุฑ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    // ุฃู ุฅุฑุณุงูู ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูููุทูุฑูู
    
    // ุนุฑุถ ุงูุชูุฑูุฑ ูู console ูููุทูุฑูู ูู ุจูุฆุฉ ุงูุชุทููุฑ
    if (process.env.NODE_ENV === 'development') {
      console.log('๐ ุชูุฑูุฑ ุฎุทุฃ ุฌุฏูุฏ:', {
        ...report,
        reason: getReasonsArabic(reason)
      });
    }

    // ุฅุฑุณุงู ุงุณุชุฌุงุจุฉ ุฅูุฌุงุจูุฉ
    res.status(201).json({
      success: true,
      message: 'ุชู ุฅุฑุณุงู ุงูุชุจููุบ ุจูุฌุงุญ. ุดูุฑุงู ูู ุนูู ูุณุงุนุฏุชูุง ูู ุชุญุณูู ุงูุฎุฏูุฉ.',
      reportId: report.id
    });

  } catch (error) {
    if (process.env.NODE_ENV === 'development') {
      console.error('โ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุชูุฑูุฑ:', error);
    }
    
    res.status(500).json({
      success: false,
      message: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู ุงูุชุจููุบ. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.'
    });
  }
});

// ุงูุญุตูู ุนูู ุฌููุน ุงูุชูุงุฑูุฑ (ููุฅุฏุงุฑุฉ)
router.get('/', async (req, res) => {
  try {
    // ูู ุงููุณุชูุจูุ ุณูุชู ุฌูุจ ุงูุชูุงุฑูุฑ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    res.json({
      reports: [],
      total: 0,
      message: 'ูุธุงู ุงูุชูุงุฑูุฑ ููุฏ ุงูุชุทููุฑ'
    });
  } catch (error) {
    res.status(500).json({
      success: false,
      message: 'ุฎุทุฃ ูู ุฌูุจ ุงูุชูุงุฑูุฑ'
    });
  }
});

// ุชุญููู ุฃุณุจุงุจ ุงูุชุจููุบ ุฅูู ุงูุนุฑุจูุฉ
function getReasonsArabic(reason: string): string {
  const reasons: { [key: string]: string } = {
    'download-link': 'ูุดููุฉ ูู ุฑุงุจุท ุงูุชุญููู ุงููุจุงุดุฑ',
    'watch-link': 'ูุดููุฉ ูู ุฑุงุจุท ุงููุดุงูุฏุฉ ุงููุจุงุดุฑุฉ',
    'subtitle': 'ูุดููุฉ ุนุฏู ุชูุงูู ุงูุชุฑุฌูุฉ',
    'audio-video': 'ูุดููุฉ ุชูููุฉ ูู ุงูุตูุช ุฃู ุงูุตูุฑุฉ',
    'content-error': 'ูุดููุฉ ุชุญุฑูุฑูุฉ ูู ุงูููุถูุน ุฃู ุงูุตูุฑ',
    'quality-update': 'ุทูุจ ุชุญุฏูุซ ุฌูุฏุฉ',
    'broken-links': 'ุฑูุงุจุท ูุนุทูุฉ ุฃู ูุง ุชุนูู',
    'wrong-content': 'ูุญุชูู ุฎุงุทุฆ ุฃู ูุฎุชูู',
    'missing-episodes': 'ุญููุงุช ููููุฏุฉ ุฃู ูุงูุตุฉ',
    'other': 'ูุดููุฉ ุฃุฎุฑู'
  };
  
  return reasons[reason] || reason;
}

export default router;